<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Client extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Client_model');
    } 

    /*
     * Listing of client
     */
    function index()
    {
        $data['client'] = $this->Client_model->get_all_client();
        
        $data['_view'] = 'client/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new client
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nom','Nom','required|max_length[50]');
		$this->form_validation->set_rules('prenom','Prenom','required|max_length[50]');
		$this->form_validation->set_rules('nom_entreprise','Nom Entreprise','max_length[150]');
		$this->form_validation->set_rules('ville','Ville','max_length[50]');
		$this->form_validation->set_rules('code_postal','Code Postal','max_length[50]');
		$this->form_validation->set_rules('pays','Pays','max_length[50]');
		$this->form_validation->set_rules('telephone','Telephone','required|max_length[20]');
		$this->form_validation->set_rules('site','Site','max_length[150]');
		$this->form_validation->set_rules('id_utilisateur','Id Utilisateur','integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_utilisateur' => $this->input->post('id_utilisateur'),
				'nom' => $this->input->post('nom'),
				'prenom' => $this->input->post('prenom'),
				'nom_entreprise' => $this->input->post('nom_entreprise'),
				'ville' => $this->input->post('ville'),
				'code_postal' => $this->input->post('code_postal'),
				'pays' => $this->input->post('pays'),
				'telephone' => $this->input->post('telephone'),
				'site' => $this->input->post('site'),
				'adresse' => $this->input->post('adresse'),
            );
            
            $client_id = $this->Client_model->add_client($params);
            redirect('client/index');
        }
        else
        {
			$this->load->model('Utilisateur_model');
			$data['all_utilisateur'] = $this->Utilisateur_model->get_all_utilisateur();
            
            $data['_view'] = 'client/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a client
     */
    function edit($id_client)
    {   
        // check if the client exists before trying to edit it
        $data['client'] = $this->Client_model->get_client($id_client);
        
        if(isset($data['client']['id_client']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nom','Nom','required|max_length[50]');
			$this->form_validation->set_rules('prenom','Prenom','required|max_length[50]');
			$this->form_validation->set_rules('nom_entreprise','Nom Entreprise','max_length[150]');
			$this->form_validation->set_rules('ville','Ville','max_length[50]');
			$this->form_validation->set_rules('code_postal','Code Postal','max_length[50]');
			$this->form_validation->set_rules('pays','Pays','max_length[50]');
			$this->form_validation->set_rules('telephone','Telephone','required|max_length[20]');
			$this->form_validation->set_rules('site','Site','max_length[150]');
			$this->form_validation->set_rules('id_utilisateur','Id Utilisateur','integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_utilisateur' => $this->input->post('id_utilisateur'),
					'nom' => $this->input->post('nom'),
					'prenom' => $this->input->post('prenom'),
					'nom_entreprise' => $this->input->post('nom_entreprise'),
					'ville' => $this->input->post('ville'),
					'code_postal' => $this->input->post('code_postal'),
					'pays' => $this->input->post('pays'),
					'telephone' => $this->input->post('telephone'),
					'site' => $this->input->post('site'),
					'adresse' => $this->input->post('adresse'),
                );

                $this->Client_model->update_client($id_client,$params);            
                redirect('client/index');
            }
            else
            {
				$this->load->model('Utilisateur_model');
				$data['all_utilisateur'] = $this->Utilisateur_model->get_all_utilisateur();

                $data['_view'] = 'client/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The client you are trying to edit does not exist.');
    } 

    /*
     * Deleting client
     */
    function remove($id_client)
    {
        $client = $this->Client_model->get_client($id_client);

        // check if the client exists before trying to delete it
        if(isset($client['id_client']))
        {
            $this->Client_model->delete_client($id_client);
            redirect('client/index');
        }
        else
            show_error('The client you are trying to delete does not exist.');
    }
    
}
