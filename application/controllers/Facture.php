<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Facture extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Facture_model');
    } 

    /*
     * Listing of facture
     */
    function index()
    {
        $data['facture'] = $this->Facture_model->get_all_facture();
        
        $data['_view'] = 'facture/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new facture
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('date_facture','Date Facture','required');
		$this->form_validation->set_rules('date_echeance','Date Echeance','required');
		$this->form_validation->set_rules('montant','Montant','required');
		$this->form_validation->set_rules('paiement_recu','Paiement Recu','required');
		$this->form_validation->set_rules('status','Status','required');
		$this->form_validation->set_rules('id_projet','Id Projet','integer');
		$this->form_validation->set_rules('id_client','Id Client','integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_projet' => $this->input->post('id_projet'),
				'id_client' => $this->input->post('id_client'),
				'date_facture' => $this->input->post('date_facture'),
				'date_echeance' => $this->input->post('date_echeance'),
				'montant' => $this->input->post('montant'),
				'paiement_recu' => $this->input->post('paiement_recu'),
				'status' => $this->input->post('status'),
            );
            
            $facture_id = $this->Facture_model->add_facture($params);
            redirect('facture/index');
        }
        else
        {
			$this->load->model('Projet_model');
			$data['all_projet'] = $this->Projet_model->get_all_projet();

			$this->load->model('Client_model');
			$data['all_client'] = $this->Client_model->get_all_client();
            
            $data['_view'] = 'facture/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a facture
     */
    function edit($id_facture)
    {   
        // check if the facture exists before trying to edit it
        $data['facture'] = $this->Facture_model->get_facture($id_facture);
        
        if(isset($data['facture']['id_facture']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('date_facture','Date Facture','required');
			$this->form_validation->set_rules('date_echeance','Date Echeance','required');
			$this->form_validation->set_rules('montant','Montant','required');
			$this->form_validation->set_rules('paiement_recu','Paiement Recu','required');
			$this->form_validation->set_rules('status','Status','required');
			$this->form_validation->set_rules('id_projet','Id Projet','integer');
			$this->form_validation->set_rules('id_client','Id Client','integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_projet' => $this->input->post('id_projet'),
					'id_client' => $this->input->post('id_client'),
					'date_facture' => $this->input->post('date_facture'),
					'date_echeance' => $this->input->post('date_echeance'),
					'montant' => $this->input->post('montant'),
					'paiement_recu' => $this->input->post('paiement_recu'),
					'status' => $this->input->post('status'),
                );

                $this->Facture_model->update_facture($id_facture,$params);            
                redirect('facture/index');
            }
            else
            {
				$this->load->model('Projet_model');
				$data['all_projet'] = $this->Projet_model->get_all_projet();

				$this->load->model('Client_model');
				$data['all_client'] = $this->Client_model->get_all_client();

                $data['_view'] = 'facture/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The facture you are trying to edit does not exist.');
    } 

    /*
     * Deleting facture
     */
    function remove($id_facture)
    {
        $facture = $this->Facture_model->get_facture($id_facture);

        // check if the facture exists before trying to delete it
        if(isset($facture['id_facture']))
        {
            $this->Facture_model->delete_facture($id_facture);
            redirect('facture/index');
        }
        else
            show_error('The facture you are trying to delete does not exist.');
    }
    
}
